- name: install curl and yq alpine
  community.general.package:
    name: curl,yq,openssl
  become: true

- name: check k3s
  ansible.builtin.command: k3s
  ignore_errors: true
  changed_when: k3s_check.rc > 1
  register: k3s_check

- name: debug msg 1
  debug:
    msg: k3s not installed on {{ inventory_hostname }}
  when: k3s_check.rc > 1

- name: uninstall
  ansible.builtin.raw: |
    /usr/local/bin/k3s-uninstall.sh
  when: k3s.uninstall

- name: Create tls directory
  ansible.builtin.file:
    path: /var/lib/rancher/k3s/server/tls
    state: directory
    mode: '0755'
  when: k3s_check.rc > 1

- name: upload ssl crt
  copy:
    src: "{{ k3s.root_ca_path }}"
    dest: /var/lib/rancher/k3s/server/tls/root-ca.pem
    decrypt: yes
    mode: 0600
  when: k3s_check.rc > 1

- name: upload ssl key
  copy:
    src: "{{ k3s.root_ca_key_path }}"
    dest: /var/lib/rancher/k3s/server/tls/root-ca.key
    decrypt: yes
    mode: 0600
  when: k3s_check.rc > 1

- name: create ca certs
  ansible.builtin.shell: curl -sfL https://github.com/k3s-io/k3s/raw/master/contrib/util/generate-custom-ca-certs.sh | sh -s -
  when: k3s_check.rc > 1 and ansible_facts['distribution'] == "Alpine"

- name: install k3s master
  ansible.builtin.raw: |
    curl -sfL https://get.k3s.io | INSTALL_K3S_EXEC="server" sh -s - \
      --node-external-ip={{ ansible_host }} \
      --bind-address={{ ansible_host }} \
      --kube-proxy-arg="bind-address={{ ansible_host }}" \
      --kubelet-arg="node-ip={{ ansible_host }}" \
      --tls-san {{ k3s.host_name }} \
      --token {{ k3s.cluster_token }} \
      --cluster-init \
      --write-kubeconfig-mode 644 \
      --disable traefik \
      --disable servicelb \
      --node-ip {{ ansible_host }} \
      --node-taint node-role.kubernetes.io/master=true:NoSchedule
  become: true
  when: k3s_check.rc > 1 and ansible_facts['distribution'] == "Alpine" and k3s.node_type == "master"
  register: k3s_install

- name: create ca certs
  ansible.builtin.shell: curl -sfL https://github.com/k3s-io/k3s/raw/master/contrib/util/generate-custom-ca-certs.sh | bash -s -
  when: k3s_check.rc > 1 and k3s.node_type == "master" and ansible_facts['distribution'] == "Ubuntu"

- name: install k3s master
  ansible.builtin.raw: curl -sfL https://get.k3s.io | INSTALL_K3S_EXEC="server" bash -s -
      --node-external-ip={{ ansible_host }} \
      --bind-address={{ ansible_host }} \
      --kube-proxy-arg="bind-address={{ ansible_host }}" \
      --kubelet-arg="node-ip={{ ansible_host }}" \
      --tls-san {{ k3s.host_name }} \
      --token {{ k3s.cluster_token }} \
      --cluster-init \
      --write-kubeconfig-mode 644 \
      --disable traefik \
      --disable servicelb \
      --node-ip {{ ansible_host }} \
      --node-taint node-role.kubernetes.io/master=true:NoSchedule
  become: true
  when: k3s_check.rc > 1 and ansible_facts['distribution'] == "Ubuntu" and k3s.node_type == "master"
  register: k3s_install

- name: install k3s server alpine
  ansible.builtin.raw: curl -sfL https://get.k3s.io | INSTALL_K3S_EXEC="server" sh -s - \
      --node-external-ip={{ ansible_host }} \
      --bind-address={{ ansible_host }} \
      --kube-proxy-arg="bind-address={{ ansible_host }}" \
      --kubelet-arg="node-ip={{ ansible_host }}" \
      --tls-san {{ k3s.host_name }} \
      --token {{ k3s.cluster_token }} \
      --server https://{{ k3s.master_server }}:6443 \
      --write-kubeconfig-mode 644 \
      --disable traefik \
      --disable servicelb \
      --node-ip {{ ansible_host }} \
      --node-taint node-role.kubernetes.io/master=true:NoSchedule
  become: true
  when: k3s_check.rc > 1 and k3s.node_type == "server" and ansible_facts['distribution'] == "Alpine"
  register: k3s_install

- name: install k3s server ubuntu
  ansible.builtin.raw: curl -sfL https://get.k3s.io | INSTALL_K3S_EXEC="server" bash -s - \
      --node-external-ip={{ ansible_host }} \
      --bind-address={{ ansible_host }} \
      --kube-proxy-arg="bind-address={{ ansible_host }}" \
      --kubelet-arg="node-ip={{ ansible_host }}" \
      --tls-san {{ k3s.host_name }} \
      --token {{ k3s.cluster_token }} \
      --server https://{{ k3s.master_server }}:6443 \
      --write-kubeconfig-mode 644 \
      --disable traefik \
      --disable servicelb \
      --node-ip {{ ansible_host }} \
      --node-taint node-role.kubernetes.io/master=true:NoSchedule
  become: true
  when: k3s_check.rc > 1 and k3s.node_type == "server" and ansible_facts['distribution'] == "Ubuntu"
  register: k3s_install

- name: reboot when k3s is installed
  ansible.builtin.reboot:
  when: k3s_install.changed

- name: edit cluster configuration
  ansible.builtin.shell: |
    yq '.clusters[0].cluster.server |= "https://{{ k3s.host_name }}:6443"' /etc/rancher/k3s/k3s.yaml > /etc/rancher/k3s/config.yaml

- name: storing in a path relative to the playbook
  ansible.builtin.fetch:
    src: /etc/rancher/k3s/config.yaml
    dest: ../.target/kubectl/{{ k3s.cluster_name }}.yml
    flat: yes
  register: k3s.node_type == "master"