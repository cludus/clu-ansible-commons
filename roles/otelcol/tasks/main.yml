- name: install unzip
  ansible.builtin.package:
    name:
      - unzip
      - zip
      - tar
      - gzip
  become: true

- name: download a file from a URL
  ansible.builtin.get_url:
    url: "https://github.com/open-telemetry/opentelemetry-collector-releases/releases/download/v0.138.0/otelcol_0.138.0_linux_amd64.tar.gz"
    dest: "/tmp/otelcol.tar.gz"
    mode: '0644'

- name: unarchive a tar.gz file
  ansible.builtin.unarchive:
    src: "/tmp/otelcol.tar.gz"
    dest: "/tmp"
    remote_src: yes
    creates: "/tmp/otelcol"

- name: copy otelcol to bin folder
  ansible.builtin.copy:
    src: /tmp/otelcol
    dest: /usr/bin/otelcol
    remote_src: yes
    mode: '0755'

- name: add otelcol config
  template:
    dest: /root/otelcol.yml
    src: otelcol.yml.j2
    owner: root
    group: root
    mode: '0755'
  when: hostvars[inventory_hostname].otelcol is defined

- name: otelcol service
  template:
    dest: /etc/init.d/otelcol-svc
    src: otelcol-svc.j2
    owner: root
    group: root
    mode: '0700'
  when: ansible_facts['distribution'] == "Alpine" and hostvars[inventory_hostname].otelcol is defined

- name: start service alpine
  ansible.builtin.service:
    name: otelcol-svc
    enabled: yes
    state: started
  when: ansible_facts['distribution'] == "Alpine" and hostvars[inventory_hostname].otelcol is defined

- name: restart service alpine
  ansible.builtin.service:
    name: otelcol-svc
    enabled: yes
    state: restarted
  when: ansible_facts['distribution'] == "Alpine" and hostvars[inventory_hostname].otelcol is defined