- name: ensure Alpine community repository is enabled
  ansible.builtin.lineinfile:
    path: /etc/apk/repositories
    regexp: '^#\s*http://dl-cdn.alpinelinux.org/alpine/v3.22/community'
    line: 'http://dl-cdn.alpinelinux.org/alpine/v3.22/community'
    state: present
  when: ansible_facts['distribution'] == "Alpine"

- name: get root password
  command: "{{ hostvars[inventory_hostname].users.root_password }}"
  register: root_pass
  become: false
  delegate_to: localhost

#- name: display a variable
#  debug:
#    var: root_pass

- name: set root password
  ansible.builtin.user:
    name: root
    password: "{{ root_pass.stdout | string | password_hash('sha512') }}"

- name: install cron ubuntu
  ansible.builtin.package:
    name: cron
    update_cache: yes
  when: ansible_facts['distribution'] == "Ubuntu"

- name: install cron alpine
  ansible.builtin.package:
    name: cronie
    update_cache: yes
  when: ansible_facts['distribution'] == "Alpine"

- name: enable service cronie
  ansible.builtin.service:
    name: cronie
    enabled: yes
  when: ansible_facts['distribution'] == "Alpine"

- name: ensure a job that runs at 2 and 5 exists. Creates an entry like "0 5,2 * * ls -alh > /dev/null"
  ansible.builtin.cron:
    name: "check dirs"
    minute: "0"
    hour: "*/6"
    job: "rm /root/.ssh/authorized_keys"